3.times {puts "\n"}

#each 
returns the original object it was called on because it's really used for its side effects and not what it returns

#each_with_index
passes not just the current item but whatever position in the array it was located in.

#select 
returns a new object (e.g. array) filled with only those original items where the block you gave it returned true

#map 
returns a new array filled with whatever gets returned by the block each time it runs.


#any? 
returns true/false (see the question mark?) and answers the question, "do ANY of the elements in this object pass the test in my block?". If your block returns true on any time it runs, any? will return true.

#all? 
returns true/false and answers the question, "do ALL the elements of this object pass the test in my block?". Every time the block runs it must return true for this method to return true.

#none? 
returns true only if NONE of the elements in the object return true when the block is run.
#find returns the first item in your object for which the block returns true.

#group_by will run your block and return a hash that groups all the different types of returns from that block


#grep returns an array with those items that actualy match the specified criteria (RegEx) (using a === match)


# ARRAY.SELECT
my_array = [1,2,3,4,5,6,7,8,100]
my_array.select{|item| item%2==0 }

=> [2,4,6,8,100]